services:
  web:
    build:
      context: .
      args:
        - DEV=true
    container_name: sentiment_analysis_app
    command: >
      sh -c "/code/wait_for_db.sh
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    # for diagnostics add this to the beginning of the above, if necessary:
    # command: sh -c "ls -lh /code && cat -A /code/wait_for_db.sh && ..."
    volumes:
      - ./backend:/code
    ports:
      - '8000:8000'
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:17-alpine
    container_name: sa_postgres_db # sa: sentiment analysis
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'localadmin', '-d', 'ml_db']
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 5s

volumes:
  postgres_data:
